{"version":3,"sources":["Common.js","ConsumptionCalculator.js","BatteryCapacityCalculator.js","BatteryRuntimeCalculator.js","registerServiceWorker.js","index.js"],"names":["loads","pi_models","ConsumptionCalculator","props","time_intervals","state","yearly","calc","bind","intervalChange","loadChange","modelChange","priceChange","event","value","parseInt","target","this","setState","parseFloat","model","total_kwh","power_con_min","power_con_max","load","interval","toFixed","cost","kwh_price","className","Helmet","name","content","itemprop","onChange","disabled","Object","keys","map","model_key","index","key","type","checked","min","step","placeholder","id","kwh","readOnly","Component","BatteryCapacityCalculator","runtimeChange","capacity","runtime","BatteryRuntimeCalculator","capacityChange","power_con","isLocalhost","Boolean","window","location","hostname","match","registerValidSW","swUrl","navigator","serviceWorker","register","then","registration","onupdatefound","installingWorker","installing","onstatechange","controller","console","log","catch","error","ReactDOM","render","basename","Navbar","collapseOnSelect","expand","bg","variant","Toggle","aria-controls","Collapse","Nav","activeKey","pathname","Link","href","exact","path","component","document","getElementById","URL","process","origin","addEventListener","fetch","response","status","headers","get","indexOf","ready","unregister","reload","checkValidServiceWorker","registerServiceWorker"],"mappings":"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","file":"static/js/main.dd841af1.chunk.js","sourcesContent":["\nexport const voltage = 5\n\nexport const loads = {\n    'low': 0,\n    'med': 0.5,\n    'high': 1\n}\n\nexport const pi_models = {\n    '0': {\n        'name': 'Raspberry Pi Zero',\n        'power_con_min': 0.5,\n        'power_con_max': 0.7\n    },\n    '0w': {\n        'name': 'Raspberry Pi Zero W',\n        'power_con_min': 0.5,\n        'power_con_max': 0.7\n    },\n    '1a': {\n        'name': 'Raspberry Pi 1 A',\n        'power_con_min': 2.5,\n        'power_con_max': 2.5\n    },\n    '1a+': {\n        'name': 'Raspberry Pi 1 A+',\n        'power_con_min': 0.4,\n        'power_con_max': 1.2\n    },\n    '1b': {\n        'name': 'Raspberry Pi 1 B',\n        'power_con_min': 3.5,\n        'power_con_max': 3.5\n    },\n    '1b+': {\n        'name': 'Raspberry Pi 1 B+',\n        'power_con_min': 0.9,\n        'power_con_max': 3.0\n    },\n    '2b': {\n        'name': 'Raspberry Pi 2 B',\n        'power_con_min': 1.1,\n        'power_con_max': 2.3\n    },\n    '3b': {\n        'name': 'Raspberry Pi 3 B',\n        'power_con_min': 1.4,\n        'power_con_max': 3.7\n    },\n    '3b+': {\n        'name': 'Raspberry Pi 3 B+',\n        'power_con_min': 1.9,\n        'power_con_max': 5.1\n    },\n    '4b': {\n        'name': 'Raspberry Pi 4 B',\n        'power_con_min': 3.4,\n        'power_con_max': 7.6\n    }\n}","import React, { Component } from 'react';\nimport './App.css';\nimport {loads, pi_models} from './Common'\nimport {Helmet} from \"react-helmet\";\n\nclass ConsumptionCalculator extends Component {\n  constructor(props) {\n    super(props);\n\n    this.time_intervals = {\n      'daily': 24,\n      'weekly': 168,\n      'monthly': 720,\n      'quaterly': 2160,\n      'yearly': 8760\n    }\n\n    this.state = {\n      'cost': '',\n      'interval': this.time_intervals.yearly,\n      'kwh': '',\n      'kwh_price': '',\n      'load': 0.5,\n      'model': ''\n    }\n\n    this.calc = this.calc.bind(this);\n    this.intervalChange = this.intervalChange.bind(this);\n    this.loadChange = this.loadChange.bind(this);\n    this.modelChange = this.modelChange.bind(this);\n    this.priceChange = this.priceChange.bind(this);\n  }\n\n  intervalChange(event) {\n    let value = parseInt(event.target.value, 10);\n    this.setState({ 'interval': value }, function () {\n      this.calc();\n    });\n  }\n\n  loadChange(event) {\n    let value = parseFloat(event.target.value);\n    this.setState({ 'load': value }, function () {\n      this.calc();\n    });\n  }\n\n  modelChange(event) {\n    let value = event.target.value;\n    this.setState({ 'model': value }, function () {\n      this.calc();\n    });\n  }\n\n  priceChange(event) {\n    let value = parseFloat(event.target.value);\n    this.setState({ 'kwh_price': value }, function () {\n      this.calc();\n    });\n  }\n\n  calc() {\n    if (this.state.model === '') {\n      return;\n    }\n    let model = pi_models[this.state.model]\n    let power_con = model.power_con_min + ((model.power_con_max - model.power_con_min) * this.state.load)\n    let kwh = power_con / 1000\n    let total_kwh = kwh * this.state.interval\n    this.setState({ 'kwh': total_kwh.toFixed(4) });\n\n    let cost = this.state.kwh_price * total_kwh || 0\n    cost = cost.toFixed(2);\n    this.setState({ 'cost': cost });\n  }\n\n  render() {\n    return (\n      <div className=\"App container\">\n        <Helmet>\n          <title>Raspberry Pi Power Consumption Calculator</title>\n          <meta name=\"description\" content=\"A calculator to determine the power consumption of your Raspberry Pi model.\"/>\n          <meta itemprop=\"name\" content=\"Raspberry Pi Power Consumption Calculator\" />\n          <meta itemprop=\"description\" content=\"A calculator to determine the power consumption of your Raspberry Pi model.\"/>\n        </Helmet>\n        <h1>Raspberry Pi Power Consumption Calculator</h1>\n        <p className=\"row\">\n          Calculate the power consumption of your Raspberry Pi model (including Zero, Zero W, 1 A, 1 A+, 1 B, 1 B+, 2 B, 3 B+, 4 B) when running it 24/7.\n          <br></br>\n          If you enter your kWh price we'll calculate the total costs as well.\n        </p>\n        <form>\n          <div className=\"row form-group\">\n            <select className=\"form-control\" value={this.state.model} onChange={this.modelChange}>\n              <option value='' disabled>Select your Model</option>\n              {\n                Object.keys(pi_models).map((model_key, index) => (\n                  <option key={model_key} value={model_key}>\n                    {pi_models[model_key].name} (~{pi_models[model_key].power_con_min}–{pi_models[model_key].power_con_max} W)\n                  </option>\n                ))\n              }\n            </select>\n          </div>\n\n          <div className=\"row form-group\">\n            <label className=\"form-check-label\">Load:</label>\n            {\n              Object.keys(loads).map((load, index) => (\n                <div key={load} className=\"form-check form-check-inline\">\n                  <input type=\"radio\" className=\"form-check-input\" name=\"load\" value={loads[load]} onChange={this.loadChange} checked={this.state.load === loads[load]} />\n                  <label className=\"form-check-label\">{load}</label>\n                </div>\n              ))\n            }\n          </div>\n\n          <div className=\"row form-group\">\n            <label className=\"form-check-label\">Time Range:</label>\n            {\n              Object.keys(this.time_intervals).map((interval, index) => (\n                <div key={interval} className=\"form-check form-check-inline\">\n                  <input type=\"radio\" className=\"form-check-input\" name=\"interval\" value={this.time_intervals[interval]} onChange={this.intervalChange} checked={this.state.interval === this.time_intervals[interval]} />\n                  <label className=\"form-check-label\">{interval}</label>\n                </div>\n              ))\n            }\n          </div>\n\n          <div className=\"row form-group\">\n            <div className=\"input-group\">\n              <input type=\"number\" min=\"0\" step=\"0.01\" className=\"form-control\" placeholder=\"0.00\" value={this.state.kwh_price} onChange={this.priceChange} />\n              <div className=\"input-group-append\">\n                <span className=\"input-group-text\" id=\"basic-addon2\">price/kWh</span>\n              </div>\n            </div>\n          </div>\n\n          <div className=\"row form-group\">\n            <label className=\"form-check-label\">Total consumption:</label>\n            <div className=\"input-group\">\n              <input type=\"text\" className=\"form-control\" placeholder=\"0.0000\" value={this.state.kwh} readOnly />\n              <div className=\"input-group-append\">\n                <span className=\"input-group-text\">kWh</span>\n              </div>\n            </div>\n          </div>\n\n          <div className=\"row form-group\">\n            <label className=\"form-check-label\">Total costs:</label>\n            <div className=\"input-group\">\n              <input type=\"text\" className=\"form-control\" placeholder=\"0.00\" value={this.state.cost} readOnly />\n            </div>\n          </div>\n\n        </form>\n      </div>\n    );\n  }\n}\n\nexport default ConsumptionCalculator;\n","import React, { Component } from 'react';\nimport './App.css';\nimport {loads, pi_models, voltage} from './Common'\nimport {Helmet} from \"react-helmet\";\n\nclass BatteryCapacityCalculator extends Component {\n  constructor(props) {\n    super(props);\n\n    // src: https://de.wikipedia.org/wiki/Raspberry_Pi\n    this.time_intervals = {\n      'daily': 24,\n      'weekly': 168,\n      'monthly': 720,\n      'quaterly': 2160,\n      'yearly': 8760\n    }\n\n    this.state = {\n      'load': 0.5,\n      'model': '',\n      'runtime': '',\n      'capacity': 0\n    }\n\n    this.calc = this.calc.bind(this);\n    this.loadChange = this.loadChange.bind(this);\n    this.modelChange = this.modelChange.bind(this);\n    this.runtimeChange = this.runtimeChange.bind(this);\n  }\n\n  loadChange(event) {\n    let value = parseFloat(event.target.value);\n    this.setState({ 'load': value }, function () {\n      this.calc();\n    });\n  }\n\n  modelChange(event) {\n    let value = event.target.value;\n    this.setState({ 'model': value }, function () {\n      this.calc();\n    });\n  }\n\n  runtimeChange(event) {\n    let value = parseFloat(event.target.value);\n    this.setState({ 'runtime': value }, function () {\n      this.calc();\n    });\n  }\n\n  calc() {\n    if (this.state.model === '') {\n      return;\n    }\n    let model = pi_models[this.state.model]\n    let power_con = model.power_con_min + ((model.power_con_max - model.power_con_min) * this.state.load)\n    let total_wh = power_con * this.state.runtime\n    let capacity = (total_wh / voltage) * 1000\n    capacity = capacity.toFixed(0)\n    this.setState({ 'capacity': capacity });\n  }\n\n  render() {\n    return (\n      <div className=\"App container\">\n        <Helmet>\n          <title>Raspberry Pi Battery Capacity Calculator</title>\n          <meta name=\"description\" content=\"A calculator to determine the required battery capacity to power your Raspberry Pi for your desired run time.\"/>\n          <meta itemprop=\"name\" content=\"Raspberry Pi Battery Capacity Calculator\" />\n          <meta itemprop=\"description\" content=\"A calculator to determine the required battery capacity to power your Raspberry Pi for your desired run time.\"/>\n        </Helmet>\n        <h1>Raspberry Pi Battery Capacity Calculator</h1>\n        <p className=\"row\">\n          Calculate the required battery capacity to power your Raspberry Pi model (including Zero, Zero W, 1 A, 1 A+, 1 B, 1 B+, 2 B, 3 B+, 4 B) for your desired run time.\n        </p>\n        <form>\n          <div className=\"row form-group\">\n            <select className=\"form-control\" value={this.state.model} onChange={this.modelChange}>\n              <option value='' disabled>Select your Model</option>\n              {\n                Object.keys(pi_models).map((model_key, index) => (\n                  <option key={model_key} value={model_key}>\n                    {pi_models[model_key].name} (~{pi_models[model_key].power_con_min}–{pi_models[model_key].power_con_max} W)\n                  </option>\n                ))\n              }\n            </select>\n          </div>\n\n          <div className=\"row form-group\">\n            <label className=\"form-check-label\">Load:</label>\n            {\n              Object.keys(loads).map((load, index) => (\n                <div key={load} className=\"form-check form-check-inline\">\n                  <input type=\"radio\" className=\"form-check-input\" name=\"load\" value={loads[load]} onChange={this.loadChange} checked={this.state.load === loads[load]} />\n                  <label className=\"form-check-label\">{load}</label>\n                </div>\n              ))\n            }\n          </div>\n\n          <div className=\"row form-group\">\n            <label className=\"form-check-label\">Desired Runtime:</label>\n            <div className=\"input-group\">\n              <input type=\"number\" className=\"form-control\" min=\"0\" step=\"0.1\" placeholder=\"12\" value={this.state.runtime} onChange={this.runtimeChange} />\n              <div className=\"input-group-append\">\n                <span className=\"input-group-text\">h</span>\n              </div>\n            </div>\n          </div>\n\n          <div className=\"row form-group\">\n            <label className=\"form-check-label\">Required capacity:</label>\n            <div className=\"input-group\">\n              <input type=\"text\" className=\"form-control\" placeholder=\"0.0000\" value={this.state.capacity} readOnly />\n              <div className=\"input-group-append\">\n                <span className=\"input-group-text\">mAh</span>\n              </div>\n            </div>\n          </div>\n        </form>\n      </div>\n    );\n  }\n}\n\nexport default BatteryCapacityCalculator;\n","import React, { Component } from 'react';\nimport './App.css';\nimport {loads, pi_models, voltage} from './Common'\nimport {Helmet} from \"react-helmet\";\n\nclass BatteryRuntimeCalculator extends Component {\n  constructor(props) {\n    super(props);\n\n    this.state = {\n      'load': 0.5,\n      'model': '',\n      'capacity': '',\n      'runtime': 0\n    }\n\n    this.calc = this.calc.bind(this);\n    this.loadChange = this.loadChange.bind(this);\n    this.modelChange = this.modelChange.bind(this);\n    this.capacityChange = this.capacityChange.bind(this);\n  }\n\n  loadChange(event) {\n    let value = parseFloat(event.target.value);\n    this.setState({ 'load': value }, function () {\n      this.calc();\n    });\n  }\n\n  modelChange(event) {\n    let value = event.target.value;\n    this.setState({ 'model': value }, function () {\n      this.calc();\n    });\n  }\n\n  capacityChange(event) {\n    let value = parseFloat(event.target.value);\n    this.setState({ 'capacity': value }, function () {\n      this.calc();\n    });\n  }\n\n  calc() {\n    if (this.state.model === '') {\n      return;\n    }\n    let model = pi_models[this.state.model]\n    let power_con = model.power_con_min + ((model.power_con_max - model.power_con_min) * this.state.load)\n    let energy = voltage * (this.state.capacity / 1000)\n    let runtime = energy / power_con\n    runtime = runtime.toFixed(2);\n    this.setState({ 'runtime': runtime });\n  }\n\n  render() {\n    return (\n      <div className=\"App container\">\n        <Helmet>\n          <title>Raspberry Pi Battery Runtime Calculator</title>\n          <meta name=\"description\" content=\"A calculator to estimate the run time of your Raspberry Pi when powering it using a battery with a given capacity.\"/>\n          <meta itemprop=\"name\" content=\"Raspberry Pi Battery Runtime Calculator\" />\n          <meta itemprop=\"description\" content=\"A calculator to estimate the run time of your Raspberry Pi when powering it using a battery with a given capacity.\"/>\n        </Helmet>\n        <h1>Raspberry Pi Battery Runtime Calculator</h1>\n        <p className=\"row\">\n          Calculate the run time that you can expect when powering your Raspberry Pi model (including Zero, Zero W, 1 A, 1 A+, 1 B, 1 B+, 2 B, 3 B+, 4 B) using a battery with a given capacity.\n        </p>\n        <form>\n          <div className=\"row form-group\">\n            <select className=\"form-control\" value={this.state.model} onChange={this.modelChange}>\n              <option value='' disabled>Select your Model</option>\n              {\n                Object.keys(pi_models).map((model_key, index) => (\n                  <option key={model_key} value={model_key}>\n                    {pi_models[model_key].name} (~{pi_models[model_key].power_con_min}–{pi_models[model_key].power_con_max} W)\n                  </option>\n                ))\n              }\n            </select>\n          </div>\n\n          <div className=\"row form-group\">\n            <label className=\"form-check-label\">Load:</label>\n            {\n              Object.keys(loads).map((load, index) => (\n                <div key={load} className=\"form-check form-check-inline\">\n                  <input type=\"radio\" className=\"form-check-input\" name=\"load\" value={loads[load]} onChange={this.loadChange} checked={this.state.load === loads[load]} />\n                  <label className=\"form-check-label\">{load}</label>\n                </div>\n              ))\n            }\n          </div>\n\n          <div className=\"row form-group\">\n            <label className=\"form-check-label\">Available capacity:</label>\n            <div className=\"input-group\">\n              <input type=\"number\" className=\"form-control\" placeholder=\"10000\" min=\"0\" step=\"1\" value={this.state.capacity} onChange={this.capacityChange} />\n              <div className=\"input-group-append\">\n                <span className=\"input-group-text\">mAh</span>\n              </div>\n            </div>\n          </div>\n\n          <div className=\"row form-group\">\n            <label className=\"form-check-label\">Resulting runtime:</label>\n            <div className=\"input-group\">\n              <input type=\"text\" className=\"form-control\" placeholder=\"0.0000\" value={this.state.runtime} readOnly />\n              <div className=\"input-group-append\">\n                <span className=\"input-group-text\">h</span>\n              </div>\n            </div>\n          </div>\n        </form>\n      </div>\n    );\n  }\n}\n\nexport default BatteryRuntimeCalculator;\n","// In production, we register a service worker to serve assets from local cache.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on the \"N+1\" visit to a page, since previously\n// cached resources are updated in the background.\n\n// To learn more about the benefits of this model, read https://goo.gl/KwvDNy.\n// This link also includes instructions on opting out of this behavior.\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.1/8 is considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport default function register() {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebookincubator/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Lets check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://goo.gl/SC7cgQ'\n          );\n        });\n      } else {\n        // Is not local host. Just register service worker\n        registerValidSW(swUrl);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the old content will have been purged and\n              // the fresh content will have been added to the cache.\n              // It's the perfect time to display a \"New content is\n              // available; please refresh.\" message in your web app.\n              console.log('New content is available; please refresh.');\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl)\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      if (\n        response.status === 404 ||\n        response.headers.get('content-type').indexOf('javascript') === -1\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready.then(registration => {\n      registration.unregister();\n    });\n  }\n}\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport { BrowserRouter as Router, Route } from 'react-router-dom';\nimport ConsumptionCalculator from './ConsumptionCalculator';\nimport BatteryCapacityCalculator from './BatteryCapacityCalculator';\nimport BatteryRuntimeCalculator from './BatteryRuntimeCalculator';\nimport registerServiceWorker from './registerServiceWorker';\nimport { Navbar, Nav} from 'react-bootstrap';\n\nimport '../node_modules/bootstrap/dist/css/bootstrap.min.css';\n\nconst App = () => (\n  <Router basename=\"/pi-power-calc\">\n    <div>\n      <Navbar collapseOnSelect expand=\"lg\" bg=\"light\" variant=\"light\">\n        <Navbar.Toggle aria-controls=\"responsive-navbar-nav\" />\n        <Navbar.Collapse id=\"responsive-navbar-nav\">\n          <Nav className=\"mr-auto\" activeKey={window.location.pathname}>\n            <Nav.Link href=\"/\">Power Consumption Calculator</Nav.Link>\n            <Nav.Link href=\"/capacity\">Battery Capacity Calculator</Nav.Link>\n            <Nav.Link href=\"/runtime\">Battery Runtime Calculator</Nav.Link>\n          </Nav>\n        </Navbar.Collapse>\n      </Navbar>\n      <div>\n        <Route exact path=\"/pi-power-calc\" component={ConsumptionCalculator} />\n        <Route path=\"/pi-power-calc/capacity\" component={BatteryCapacityCalculator} />\n        <Route path=\"/pi-power-calc/runtime\" component={BatteryRuntimeCalculator} />\n      </div>\n    </div>\n  </Router>\n);\n\nReactDOM.render(<App />, document.getElementById('root'));\nregisterServiceWorker();\n"],"sourceRoot":""}