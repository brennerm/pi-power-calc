{"version":3,"sources":["App.js","registerServiceWorker.js","index.js"],"names":["App","props","pi_models","time_intervals","load","exchange_rates","state","yearly","calcCost","bind","currencyChange","intervalChange","loadChange","modelChange","priceChange","fetch","then","response","json","data","event","value","target","this","setState","parseInt","parseFloat","model","currency_factor","rates","currency","total_kwh","power_con_min","power_con_max","interval","toFixed","cost","kwh_price","className","onChange","disabled","Object","keys","map","model_key","index","key","name","type","checked","min","step","placeholder","id","kwh","readOnly","window","goatcounter","no_onload","data-goatcounter","async","src","Component","isLocalhost","Boolean","location","hostname","match","registerValidSW","swUrl","navigator","serviceWorker","register","registration","onupdatefound","installingWorker","installing","onstatechange","controller","console","log","catch","error","ReactDOM","render","document","getElementById","URL","process","origin","addEventListener","status","headers","get","indexOf","ready","unregister","reload","checkValidServiceWorker","registerServiceWorker"],"mappings":"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","file":"static/js/main.ca89ffb3.chunk.js","sourcesContent":["import React, { Component } from 'react';\nimport './App.css';\n\n\n\nclass App extends Component {\n  constructor(props) {\n    super(props);\n\n    // src: https://de.wikipedia.org/wiki/Raspberry_Pi\n    this.pi_models = {\n      '0': {\n        'name': 'Raspberry Pi Zero',\n        'power_con_min': 0.5,\n        'power_con_max': 0.7\n      },\n      '0w': {\n        'name': 'Raspberry Pi Zero W',\n        'power_con_min': 0.5,\n        'power_con_max': 0.7\n      },\n      '1a': {\n        'name': 'Raspberry Pi 1 A',\n        'power_con_min': 2.5,\n        'power_con_max': 2.5\n      },\n      '1a+': {\n        'name': 'Raspberry Pi 1 A+',\n        'power_con_min': 0.4,\n        'power_con_max': 1.2\n      },\n      '1b': {\n        'name': 'Raspberry Pi 1 B',\n        'power_con_min': 3.5,\n        'power_con_max': 3.5\n      },\n      '1b+': {\n        'name': 'Raspberry Pi 1 B+',\n        'power_con_min': 0.9,\n        'power_con_max': 3.0\n      },\n      '2b': {\n        'name': 'Raspberry Pi 2 B',\n        'power_con_min': 1.1,\n        'power_con_max': 2.3\n      },\n      '3b': {\n        'name': 'Raspberry Pi 3 B',\n        'power_con_min': 1.4,\n        'power_con_max': 3.7\n      },\n      '3b+': {\n        'name': 'Raspberry Pi 3 B+',\n        'power_con_min': 1.9,\n        'power_con_max': 5.1\n      },\n      '4b': {\n        'name': 'Raspberry Pi 4 B',\n        'power_con_min': 3.4,\n        'power_con_max': 7.6\n      }\n    }\n\n    this.time_intervals = {\n      'daily': 24,\n      'weekly': 168,\n      'monthly': 720,\n      'quaterly': 2160,\n      'yearly': 8760\n    }\n\n    this.load = {\n      'low': 0,\n      'med': 0.5,\n      'high': 1\n    }\n\n    this.exchange_rates = {}\n\n    this.state = {\n      'cost': '',\n      'currency': 'USD',\n      'interval': this.time_intervals.yearly,\n      'kwh': '',\n      'kwh_price': '',\n      'load': 0.5,\n      'model': ''\n    }\n\n    this.calcCost = this.calcCost.bind(this);\n    this.currencyChange = this.currencyChange.bind(this);\n    this.intervalChange = this.intervalChange.bind(this);\n    this.loadChange = this.loadChange.bind(this);\n    this.modelChange = this.modelChange.bind(this);\n    this.priceChange = this.priceChange.bind(this);\n  }\n\n  componentDidMount() {\n    fetch('https://api.exchangeratesapi.io/latest?base=USD')\n      .then(response => response.json())\n      .then(data => {this.exchange_rates = data})\n  }\n\n  currencyChange(event) {\n    let value = event.target.value;\n    this.setState({'currency': value}, function() {\n      this.calcCost();\n    });\n  }\n\n  intervalChange(event) {\n    let value = parseInt(event.target.value, 10);\n    this.setState({'interval': value}, function() {\n      this.calcCost();\n    });\n  }\n\n  loadChange(event) {\n    let value = parseFloat(event.target.value);\n    this.setState({'load': value}, function() {\n      this.calcCost();\n    });\n  }\n\n  modelChange(event) {\n    let value = event.target.value;\n    this.setState({'model': value}, function() {\n      this.calcCost();\n    });\n  }\n\n  priceChange(event) {\n    let value = parseFloat(event.target.value);\n    this.setState({'kwh_price': value}, function() {\n      this.calcCost();\n    });\n  }\n\n  calcCost() {\n    if (this.state.model === '') {\n      return;\n    }\n    let model = this.pi_models[this.state.model]\n    let currency_factor = this.exchange_rates.rates[this.state.currency]\n    let power_con = model.power_con_min + ((model.power_con_max - model.power_con_min) * this.state.load)\n    let kwh = power_con / 1000\n    let total_kwh = kwh * this.state.interval\n    this.setState({'kwh': total_kwh.toFixed(4)});\n\n    let cost = this.state.kwh_price * total_kwh / 100\n    cost = cost * currency_factor\n    cost = cost.toFixed(4);\n    this.setState({'cost': cost});\n  }\n\n  render() {\n    return (\n      <div className=\"App\">\n        <header className=\"App-header\">\n          <h1 className=\"App-title\">Raspberry Pi Power Calculator</h1>\n        </header>\n        <form className=\"container\">\n        <div className=\"row form-group\">\n        <select className=\"form-control\" value={this.state.model} onChange={this.modelChange}>\n          <option value='' disabled>Select your Model</option>\n          {\n            Object.keys(this.pi_models).map((model_key, index) => (\n              <option key={model_key} value={model_key}>\n              {this.pi_models[model_key].name} (~{this.pi_models[model_key].power_con_min}–{this.pi_models[model_key].power_con_max} W)\n              </option>\n            ))\n          }\n        </select>\n        </div>\n        \n        <div className=\"row form-group\">\n        <label className=\"form-check-label\">Time Range</label>\n        {\n          Object.keys(this.time_intervals).map((interval, index) => (\n            <div key={interval} className=\"form-check form-check-inline\">\n            <input type=\"radio\" className=\"form-check-input\" name=\"interval\" value={this.time_intervals[interval]} onChange={this.intervalChange} checked={this.state.interval === this.time_intervals[interval]}/>\n            <label className=\"form-check-label\">{interval}</label>\n            </div>\n          ))\n        }\n        </div>\n\n        <div className=\"row form-group\">\n        <label className=\"form-check-label\">Load</label>\n        {\n          Object.keys(this.load).map((load, index) => (\n            <div key={load} className=\"form-check form-check-inline\">\n            <input type=\"radio\" className=\"form-check-input\" name=\"load\" value={this.load[load]} onChange={this.loadChange} checked={this.state.load === this.load[load]}/>\n            <label className=\"form-check-label\">{load}</label>\n            </div>\n          ))\n        }\n        </div>\n\n        <div className=\"row form-group\">\n        <div className=\"input-group\">\n        <input type=\"number\" min=\"0\" step=\"0.01\" className=\"form-control\" placeholder=\"0.00\" value={this.state.kwh_price} onChange={this.priceChange}/>\n          <div className=\"input-group-append\">\n            <span className=\"input-group-text\" id=\"basic-addon2\">ct/kWh</span>\n          </div>\n        </div>\n        </div>\n        \n        <div className=\"row form-group\">\n          <div className=\"input-group\">\n          <input type=\"text\" className=\"form-control\" placeholder=\"0.0000\" value={this.state.kwh} readOnly/>\n            <div className=\"input-group-append\">\n              <span className=\"input-group-text\">kWh</span>\n            </div>\n          </div>\n        </div>\n\n        <div className=\"row form-group\">\n          <div className=\"input-group\">\n            <input type=\"text\" className=\"form-control\" placeholder=\"0.0000\" value={this.state.cost} readOnly/>\n              <div className=\"input-group-append\">\n                <span className=\"input-group-addon\">\n                <select className=\"form-control\" value={this.state.currency} onChange={this.currencyChange}>\n                    <option value=\"USD\">$</option>\n                    <option value=\"EUR\">€</option>\n                </select>\n                </span>\n              </div>\n          </div>\n        </div>\n\n        </form>\n        <script>\n        if (window.location.host !== 'brennerm.github.io') {\n          window.goatcounter = {no_onload: true}\n        }\n        </script>\n        <script data-goatcounter=\"https://pi-power-calc.goatcounter.com/count\" async src=\"//gc.zgo.at/count.js\"></script>\n      </div>\n    );\n  }\n}\n\nexport default App;\n","// In production, we register a service worker to serve assets from local cache.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on the \"N+1\" visit to a page, since previously\n// cached resources are updated in the background.\n\n// To learn more about the benefits of this model, read https://goo.gl/KwvDNy.\n// This link also includes instructions on opting out of this behavior.\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.1/8 is considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport default function register() {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebookincubator/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Lets check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://goo.gl/SC7cgQ'\n          );\n        });\n      } else {\n        // Is not local host. Just register service worker\n        registerValidSW(swUrl);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the old content will have been purged and\n              // the fresh content will have been added to the cache.\n              // It's the perfect time to display a \"New content is\n              // available; please refresh.\" message in your web app.\n              console.log('New content is available; please refresh.');\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl)\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      if (\n        response.status === 404 ||\n        response.headers.get('content-type').indexOf('javascript') === -1\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready.then(registration => {\n      registration.unregister();\n    });\n  }\n}\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport registerServiceWorker from './registerServiceWorker';\n\nimport '../node_modules/bootstrap/dist/css/bootstrap.min.css';\n\nReactDOM.render(<App />, document.getElementById('root'));\nregisterServiceWorker();\n"],"sourceRoot":""}